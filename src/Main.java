public class Main {
    // Преобразует строку, делая первый символ заглавным.
    static String firstCharInCaps(String str) {
        char[] strArray = str.toCharArray();
        strArray[0] = Character.toUpperCase(strArray[0]);
        String strNew = new String(strArray);
        return strNew;
    }
    public static void main(String[] args) {
        // Task 1:
        // Представим, что мы работаем в небольшой компании.
        // Данные сотрудников хранятся в неструктурированном формате, и бухгалтерия попросила написать программу,
        // в которой можно работать с Ф.И.О. сотрудников.
        // Напишите четыре строки:
        // первая с именем firstName — для хранения имени;
        // вторая с именем middleName — для хранения отчества;
        // третья с именем lastName — для хранения фамилии;
        // четвертая с именем fullName — для хранения Ф.И.О. сотрудника в формате "Фамилия Имя Отчество".
        // Выведите в консоль фразу: “ФИО сотрудника — ….”
        // В качестве данных для задачи используйте “Ivanov Ivan Ivanovich”.

        String firstName = "ivan";
        String middleName = "ivanovich";
        String lastName = "ivanov";
        String fullName = lastName + " " + firstName + " " + middleName;

        System.out.println("ФИО сотрудника — " + fullName);

        // Task 2:
        // Для подачи ежемесячного отчета и ведения документации нашей бухгалтерии нужны Ф.И.О. сотрудников,
        // полностью написанные заглавными буквами (верхним регистром).
        // Напишите программу, которая изменит написание Ф.И.О. сотрудника с “Ivanov Ivan Ivanovich”
        // на полностью заглавные буквы.
        // В качестве строки с исходными данными используйте строку fullName.
        // Результат программы выведите в консоль в формате: ”Данные ФИО сотрудника для заполнения отчета — …”

        System.out.println("Данные ФИО сотрудника для заполнения отчета — " + fullName.toUpperCase());

        // Task 3:
        // Система, в которой мы работаем, не принимает символ “ё”.
        // Поэтому нам нужно написать программу, которая заменяет символ “ё” на символ “е”.
        // В качестве исходных данных используйте строку fullName и данные в ней “Иванов Семён Семёнович”.
        // Выведите результат программы в консоль в формате: ”Данные ФИО сотрудника — ...”

        System.out.println("Данные ФИО сотрудника — " + fullName.replace('ё', 'е'));

        // Task 4 (ext):
        // К нам снова обратились за помощью, но теперь уже для того, чтобы написать алгоритм,
        // разбивающий одну строку с Ф.И.О. на три — на фамилию, имя и отчество.
        // В качестве исходных данных используйте:
        // Ф.И.О. сотрудника: “Ivanov Ivan Ivanovich”;
        // строка fullName — для хранения Ф.И.О. сотрудника в формате фамилия - имя - отчество;
        // переменная firstName — для хранения имени;
        // переменная middleName — для хранения отчества;
        // переменная lastName — для хранения фамилии.
        // Решите задание с помощью метода substring().
        // Результат программы выведите в формате:
        // “Имя сотрудника — …”
        // “Фамилия сотрудника — …”
        // “Отчество сотрудника — ...”
        // Важно: «в голове» высчитывать позиции пробелов и параметров для обрезания строки запрещено.
        // Их должен вычислить компьютер.
        // Подсказка - Определить индексы символов помогут методы indexOf() и lastIndexOf().

        String lName = fullName.substring(0, fullName.indexOf(" "));
        String mName = fullName.substring(fullName.lastIndexOf(" ") + 1);
        String fName = fullName.substring(fullName.indexOf(" ") + 1, fullName.lastIndexOf(" "));

        System.out.println("Фамилия сотрудника — " + lName);
        System.out.println("Имя сотрудника — " + fName);
        System.out.println("Отчество сотрудника — " + mName);

        // Task 5 (ext):
        // Периодически данные в наших регистрах заполняются неверно, и Ф.И.О. сотрудников записывают со строчных букв.
        // Такую оплошность нужно исправить, написав программу, которая преобразует написанное со строчных букв Ф.И.О.
        // в правильный формат.
        // В качестве исходных данных используйте строку fullName c данными “ivanov ivan ivanovich“,
        // которые нужно преобразовать в “Ivanov Ivan Ivanovich”.
        // Выведите результат программы в консоль в формате: “Верное написание Ф. И. О. сотрудника с заглавных букв — …”
        // Подсказка 1
        // Метод toCharArray() может быть полезен.
        // Подсказка 2
        // Для преобразования символа в верхний регистр следует использовать метод Character.toUpperCase(c), где c — символ.

        System.out.println("Верное написание Ф. И. О. сотрудника с заглавных букв — " +
                firstCharInCaps(lName) + " " + firstCharInCaps(fName) + " " + firstCharInCaps(mName));

        // Task 6 (ext):
        // Имеется две строки.
        // Первая: "135"
        // Вторая: "246"
        // Соберите из двух строк одну, содержащую данные "123456".
        // Использовать сортировку нельзя.
        // Набор чисел задан для понимания позиций, которые они должны занять в итоговой строке.
        // Выведите результат в консоль в формате: “Данные строки — ….”
        // Подсказка
        // Следует использовать StringBuilder.

        String str1 = "135";
        String str2 = "246";
        String str = str1 + str2;

        StringBuilder sb = new StringBuilder(str);

        for (int i = 0; i < sb.length(); i++) {
            int j = Character.getNumericValue(str.charAt(i)) - 1;
            sb.setCharAt(j, str.charAt(i));
        }
        System.out.println("Данные строки — " + sb);

        // Task 7 (ext):
        // Дана строка из букв английского алфавита "aabccddefgghiijjkk".
        // Нужно найти и напечатать буквы, которые дублируются в строке.
        // Обратите внимание, что строка отсортирована, т. е. дубли идут друг за другом.
        // В итоге в консоль должен быть выведен результат программы: "acdgijk".

        String strEng = "aabccddefgghiijjkk";

        for (int i = 0; i < strEng.length(); i++) {
            if (i < strEng.length() - 1) {
                if (strEng.charAt(i) == strEng.charAt(i + 1)) {
                    System.out.print(strEng.charAt(i));
                }
            }
        }
    }
}